{"version":3,"sources":["assets/images/logo.svg","components/toast/Toast.js","components/button/Button.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","d","success","error","warning","info","question","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","sweetalert2__WEBPACK_IMPORTED_MODULE_1__","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","sweetalert2_react_content__WEBPACK_IMPORTED_MODULE_2__","sweetalert2_react_content__WEBPACK_IMPORTED_MODULE_2___default","MySwal","withReactContent","Swal","Toast","mixin","toast","position","showConfirmButton","timer","background","fire","title","a","createElement","footer","onOpen","clickConfirm","then","type","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chance","Chance","Math","random","state","firstName","first","lastName","last","country","full","checked","handleChange","bind","assertThisInitialized","setState","_this2","myPromise","Promise","resolve","reject","console","log","Error","resolvedValue","_this3","react_default","className","onClick","handleToast","alert","react_switch_default","onChange","Component","App","src","logo","alt","components_button_Button","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed8f5f84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport './Animate.css';\r\n\r\nfunction success() {\r\n    const MySwal = withReactContent(Swal);\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        background: 'linear-gradient(to left, rgba(67, 172, 67, 0.7), #43ac43)'\r\n    });\r\n    MySwal.fire({\r\n        title: <p>Hello World</p>,\r\n        footer: 'Copyright 2018',\r\n        onOpen: () => {\r\n            MySwal.clickConfirm()\r\n        }\r\n    }).then(() => {\r\n        return Toast.fire({\r\n            type: 'success',\r\n            title: 'SweetAlert2 is imported successfully'\r\n        })\r\n    });\r\n}\r\n\r\nfunction error() {\r\n    const MySwal = withReactContent(Swal);\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        background: 'linear-gradient(to left, rgba(252, 68, 69, 0.7), #fc4445)'\r\n    });\r\n    MySwal.fire({\r\n        title: <p>Hello World</p>,\r\n        footer: 'Copyright 2018',\r\n        onOpen: () => {\r\n            MySwal.clickConfirm()\r\n        }\r\n    }).then(() => {\r\n        return Toast.fire({\r\n            type: 'error',\r\n            title: 'SweetAlert2 couldn\\'t be imported'\r\n        })\r\n    });\r\n}\r\n\r\nfunction warning() {\r\n    const MySwal = withReactContent(Swal);\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        background: 'linear-gradient(to left, rgba(95, 151, 250, 0.7), #5f97fa)'\r\n    });\r\n    MySwal.fire({\r\n        title: <p>Hello World</p>,\r\n        footer: 'Copyright 2018',\r\n        onOpen: () => {\r\n            MySwal.clickConfirm()\r\n        }\r\n    }).then(() => {\r\n        return Toast.fire({\r\n            type: 'warning',\r\n            title: 'SweetAlert2 is already imported'\r\n        })\r\n    });\r\n}\r\n\r\nfunction info() {\r\n    const MySwal = withReactContent(Swal);\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        background: 'linear-gradient(to left, rgba(95, 151, 250, 0.7), #5f97fa)'\r\n    });\r\n    MySwal.fire({\r\n        title: <p>Hello World</p>,\r\n        footer: 'Copyright 2018',\r\n        onOpen: () => {\r\n            MySwal.clickConfirm()\r\n        }\r\n    }).then(() => {\r\n        return Toast.fire({\r\n            type: 'info',\r\n            title: 'Information about something'\r\n        })\r\n    });\r\n\r\n}\r\n\r\nfunction question() {\r\n    const MySwal = withReactContent(Swal);\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        background: 'linear-gradient(to left, rgba(95, 151, 250, 0.7), #5f97fa)'\r\n    });\r\n    MySwal.fire({\r\n        title: <p>Hello World</p>,\r\n        footer: 'Copyright 2018',\r\n        onOpen: () => {\r\n            MySwal.clickConfirm()\r\n        }\r\n    }).then(() => {\r\n        return Toast.fire({\r\n            type: 'question',\r\n            title: 'Question about something'\r\n        })\r\n    });\r\n}\r\n\r\nexport { success, error, warning, info, question };","import React, {Component} from 'react';\r\nimport Switch from 'react-switch';\r\nimport Chance from 'chance';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const chance = new Chance(Math.random);\r\n        this.state = {\r\n            firstName: chance.first(),\r\n            lastName: chance.last(),\r\n            country: chance.country({full: true}),\r\n            checked: true,\r\n            toast: false,\r\n            module: null,\r\n            title: 'Click!'\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(checked) {\r\n        this.setState({checked});\r\n    }\r\n\r\n    handleToast(toast) {\r\n        this.setState({toast});\r\n    }\r\n\r\n    toastAlert() {\r\n        const myPromise = new Promise((resolve, reject) => {\r\n            if (import('../toast/Toast.js')) {\r\n                console.log('resolving the promise ...');\r\n                resolve('Hello, Promises!');\r\n                if(this.state.toast) {\r\n                    console.log(import('../toast/Toast.js'));\r\n                }\r\n            }\r\n            reject(new Error('In 10% of the cases, I fail. Miserably.'));\r\n        });\r\n\r\n        // Two functions\r\n        const onResolved = (resolvedValue) => console.log(resolvedValue);\r\n        const onRejected = (error) => console.log(error);\r\n\r\n        myPromise.then(onResolved, onRejected);\r\n\r\n        // Same as above, written concisely\r\n        myPromise.then((resolvedValue) => {\r\n            console.log(resolvedValue);\r\n            console.log(this.state.module);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p><code>Hello {this.state.firstName} {this.state.lastName}, you're from {this.state.country}.</code></p>\r\n                    <button className={\"button\"} onClick={() => {\r\n                        if(this.state.checked) {\r\n                            import('../toast/Toast.js').then(Toast => {\r\n                                this.handleToast(true);\r\n                                Toast.success();\r\n                            });\r\n                        }\r\n                        else if(this.state.toast) {\r\n                            import('../toast/Toast.js').then(Toast => {\r\n                                Toast.warning();\r\n                            });\r\n                        }\r\n                        else {\r\n                            alert(\"Toast Notifications are Off\");\r\n                        }\r\n                    }}>{this.state.title}</button>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        <span><code>Toast Notifications are {this.state.checked ? \"On \" : \"Off \"}</code></span>\r\n                        <Switch onChange={this.handleChange} checked={this.state.checked}/>\r\n                    </label>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\nimport Button from '../button/Button';\nimport Toast from '../toast/Toast';\nimport logo from '../../assets/images/logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Button/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}